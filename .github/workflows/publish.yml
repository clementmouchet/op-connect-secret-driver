name: Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_run:
    workflows: [ "Build" ]
    branches: [ main ]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        
    steps:
      - uses: actions/checkout@v5

      - name: 'Set environment variables'
        run: |
          echo "platform_tag=$(echo "${{ matrix.platform }}" | tr '/' '-')" >> "$GITHUB_ENV"

      - name: 'Download artifact'
        uses: actions/download-artifact@v5
        with:
          name: plugin-rootfs-${{ env.platform_tag }}
          path: plugin/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: 'Unpack Image Archive'
        run: |
          docker load -i plugin/plugin-rootfs-${{ env.platform_tag }}.tar

      - name: 'Create RootFS Directory'
        run: |
          id=$(docker create rootfsimage-${{ env.platform_tag }} true)
          mkdir -p ./plugin/rootfs/
          docker export "$id" | tar -x -C ./plugin/rootfs/
          docker rm -vf "$id"
          rm plugin/plugin-rootfs-${{ env.platform_tag }}.tar

      - name: 'Log into registry'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: 'Enable experimental features'
        run: |
          echo '{"experimental": true}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart

      - name: 'Publish latest'
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker plugin create "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ env.platform_tag }}" plugin
          docker plugin push "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ env.platform_tag }}"

      - name: 'Create manifest list for latest'
        if: ${{ github.ref == 'refs/heads/main' && matrix.platform == 'linux/amd64' }}
        run: |
          docker manifest create "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:latest" \
            "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:linux-amd64" \
            "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:linux-arm64"
           docker manifest push "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:latest"

      - name: 'Publish tagged'
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          docker plugin create "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ github.ref_name }}-${{ env.platform_tag }}" plugin
          docker plugin push "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ github.ref_name }}-"

      - name: 'Create manifest list for tagged version'
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.platform == 'linux/amd64' }}
        run: |
          docker manifest create "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ github.ref_name }}" \
            "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ github.ref_name }}-linux-amd64" \
            "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ github.ref_name }}-linux-arm64"
           docker manifest push "docker.io/${{ secrets.DOCKER_USERNAME }}/op-connect-secret-driver:${{ github.ref_name }}"